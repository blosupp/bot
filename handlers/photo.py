# handlers/photo.py

from aiogram import Router, types
from config import ADMIN_ID, CHANNEL_ID
from services.openai_service import ask_gpt
from aiogram import F

router = Router()

# üß† –•—Ä–∞–Ω–∏–ª–∏—â–µ –∏—Å—Ç–æ—Ä–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
user_memory = {}  # user_id: list of messages (–¥–æ 20)

@router.message(F.fhoto)
async def handle_photo_with_caption(message: types.Message):
    # ‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –¥–æ—Å—Ç—É–ø —Ç–æ–ª—å–∫–æ –¥–ª—è ADMIN_ID
    if str(message.from_user.id) != str(ADMIN_ID):
        await message.answer("‚õîÔ∏è –ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞.")
        return

    # ‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –ø–æ–¥–ø–∏—Å–∏ –∫ —Ñ–æ—Ç–æ
    if not message.caption:
        await message.answer("‚ö†Ô∏è –î–æ–±–∞–≤—å –ø–æ–¥–ø–∏—Å—å –∫ —Ñ–æ—Ç–æ ‚Äî —ç—Ç–æ –±—É–¥–µ—Ç —Ç–µ–º–æ–π –ø–æ—Å—Ç–∞.")
        return

    await message.answer("üß† –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏ –ø–æ–¥–ø–∏—Å—å...")

    try:
        # ‚úÖ –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞—é—â–∏–π system_prompt –¥–ª—è GPT
        system_prompt = (
            "–¢—ã ‚Äî Telegram-–∫–æ–ø–∏—Ä–∞–π—Ç–µ—Ä. –ü–∏—à–∏ –ø–æ—Å—Ç—ã –∫–∞–∫ –ø–æ–¥–ø–∏—Å—å –∫ —Ñ–æ—Ç–æ. "
            "–ù–µ –ø—Ä–µ–≤—ã—à–∞–π 1024 —Å–∏–º–≤–æ–ª–∞. –ë–µ–∑ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–π, –±–µ–∑ —Ö—ç—à—Ç–µ–≥–æ–≤, –±–µ–∑ –ª–∏—à–Ω–µ–≥–æ. "
            "–ù–∏–∫–∞–∫–∏—Ö –æ–±—ä—è—Å–Ω–µ–Ω–∏–π ‚Äî —Ç–æ–ª—å–∫–æ –≥–æ—Ç–æ–≤—ã–π, –∫—Ä–∞—Ç–∫–∏–π, —Å–æ–¥–µ—Ä–∂–∞—Ç–µ–ª—å–Ω—ã–π —Ç–µ–∫—Å—Ç."
        )

        # üß† –û–±–Ω–æ–≤–ª—è–µ–º –∏—Å—Ç–æ—Ä–∏—é –¥–∏–∞–ª–æ–≥–∞
        user_id = message.from_user.id
        user_memory.setdefault(user_id, []).append({"role": "user", "content": message.caption})

        # –û—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 20 —Å–æ–æ–±—â–µ–Ω–∏–π
        if len(user_memory[user_id]) > 20:
            user_memory[user_id] = user_memory[user_id][-20:]

        # ‚úÖ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–µ–∫—Å—Ç–∞ —Å –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º
        gpt_reply = ask_gpt(
            prompt=message.caption,
            system_prompt=system_prompt,
            memory=user_memory[user_id]  # –ø–µ—Ä–µ–¥–∞—ë–º –∏—Å—Ç–æ—Ä–∏—é
        )

        # üß† –î–æ–±–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç GPT –≤ –∏—Å—Ç–æ—Ä–∏—é
        user_memory[user_id].append({"role": "assistant", "content": gpt_reply})

        # ‚úÖ –°—Ç—Ä–∞—Ö–æ–≤–∫–∞: –æ–±—Ä–µ–∑–∫–∞ —Ç–µ–∫—Å—Ç–∞ –µ—Å–ª–∏ GPT –Ω–∞—Ä—É—à–∏–ª –ª–∏–º–∏—Ç
        if len(gpt_reply) > 1024:
            gpt_reply = gpt_reply[:1021] + "..."

        # ‚úÖ –û—Ç–ø—Ä–∞–≤–∫–∞ –≤ –∫–∞–Ω–∞–ª
        await message.bot.send_photo(
            chat_id=CHANNEL_ID,
            photo=message.photo[-1].file_id,
            caption=gpt_reply,
            parse_mode="HTML"
        )

        # ‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        await message.answer("‚úÖ –ü–æ—Å—Ç —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω –≤ –∫–∞–Ω–∞–ª.")

    except Exception as e:
        # ‚úÖ –õ–æ–≤–∏–º –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—à–∏–±–∫—É
        await message.answer(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø–æ—Å—Ç–∞: {e}")
